/*
-- INSERT INTO

INSERT INTO sales.stores (store_name, phone)
VALUES ('new store', 01226553430);


INSERT INTO sales.stores
VALUES (..,..,..)

-- NULL checking

SELECT *
FROM sales.stores
WHERE email IS NOT NULL



SELECT *
FROM sales.stores
WHERE email IS NULL

-- UPDATE and DELETE

UPDATE sales.stores
SET store_name = 'UPDATED'

-- WATCH OUT !! → all records will be updated !!!!!
-- SO, we use where..


UPDATE sales.stores
SET store_name = 'UPDATED'
WHERE store_name = 'elfagr'


DELETE FROM sales.stores 
WHERE store_name = 'new store'

-- WATCH OUT !! → all records will be deleted !!!!!
-- SO, we use where..

DELETE FROM sales.stores 
WHERE store_name = 'new store'

-- TOP

SELECT TOP 10 *
FROM sales.stores
	

SELECT TOP 10 PERCENT *
FROM sales.stores


SELECT TOP 10 PERCENT * 
FROM sales.stores
WHERE city = 'giza'

-- MIN(), MAX()

SELECT MIN(store_id)
AS smallest_id
FROM sales.stores
WHERE store_id > 10

SELECT MAX(store_id)
AS smallest_id
FROM sales.stores
WHERE store_id > 10


-- COUNT(), AVG() and SUM()

SELECT COUNT(*)
AS countnumber
FROM sales.stores
WHERE city = 'giza'


SELECT AVG(store_id)
AS average
FROM sales.stores


SELECT SUM(store_id)
AS summition
FROM sales.stores

-- notice, the AS clause is an alias

-- Wild Cards

%	Represents zero or more characters

_	Represents a single character

[]	Represents any single character within the brackets

^	Represents any character not in the brackets

-	Represents any single character within the specified 



-- IMPORTANT 

SELECT store_name
FROM sales.stores
WHERE store_name IN (SELECT product_id FROM production.products);



/*
The BETWEEN operator selects values within a given range. The values can be numbers, text, or dates.

The BETWEEN operator is inclusive: begin and end values are included. 
*/



SELECT * 
FROM sales.stores
WHERE store_id BETWEEN 10 AND 20
AND zip_code NOT IN (1,2,3);


SELECT * 
FROM sales.stores
WHERE store_name BETWEEN 'max' AND 'omg'
ORDER BY store_id DESC


-- Aliases

SELECT store_id AS id, store_name AS name, zip_code AS code
FROM sales.stores AS myAlias


SELECT store_name + ',  '+ city AS details
FROM sales.stores

SELECT ss.store_name, pb.brand_name 
FROM sales.stores AS ss, production.brands AS pb
WHERE ss.store_name = 'max' and ss.store_name = pb.brand_name
*/